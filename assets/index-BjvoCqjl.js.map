{"version":3,"file":"index-BjvoCqjl.js","sources":["../../src/helpers/getCurrentDate.ts","../../src/components/CalendarControlPanel/CalendarControlPanel.styled.ts","../../src/constants/constants.ts","../../src/components/CalendarControlPanel/CalendarControlPanel.tsx","../../src/views/CalendarView/CalendarView.tsx"],"sourcesContent":["export const getCurrentDate = () => new Date().toISOString().slice(0, 10)\n","import { NavLink } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\nimport { global, secondaryBtn } from 'styles'\n\nconst arrowIconCommonStyles = css`\n  width: 1rem;\n  height: 1rem;\n  fill: ${({ theme }) => theme.textColor};\n  stroke: ${({ theme }) => theme.textColor};\n`\n\nexport const CalendarControlPanel = styled.div`\n  margin-bottom: ${({ theme }) => theme.global.spacing(4)};\n`\n\nexport const CurrentPeriod = styled.div`\n  ${secondaryBtn}\n\n  min-width: 11rem;\n\n  color: ${({ theme }) => theme.textColor};\n\n  text-transform: uppercase;\n\n  background-color: ${({ theme }) => theme.primaryBgColor};\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: ${({ theme }) => theme.primaryBgColor};\n    color: ${({ theme }) => theme.textColor};\n  }\n`\n\nexport const ArrowButton = styled.button`\n  ${secondaryBtn}\n\n  background-color: ${({ theme }) => theme.primaryBgColor};\n\n  &.prev {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  &.next {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n\n    border-left: 0.03125rem;\n  }\n\n  &:hover svg,\n  &:focus svg,\n  &:active svg,\n  &.active svg {\n    fill: ${({ theme }) => theme.btnHoverTextColor};\n    stroke: ${({ theme }) => theme.btnHoverTextColor};\n  }\n`\n\nexport const ArrowIcon = styled.svg`\n  ${arrowIconCommonStyles}\n\n  /* fill: ${({ theme }) => theme.btnTextColor};\n  stroke: ${({ theme }) => theme.btnTextColor}; */\n\n  &.left {\n    transform: rotate(90deg);\n  }\n\n  &.right {\n    transform: rotate(-90deg);\n  }\n`\n\nexport const ControlWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nexport const ArrowWrapper = styled.div`\n  display: flex;\n`\n\nexport const ControlOutWrapper = styled.div`\n  display: flex;\n\n  justify-content: space-between;\n  margin-bottom: ${({ theme }) => theme.global.spacing(4)};\n\n  @media (min-width: ${global.breakpoint.mobile}) {\n    margin-bottom: 0;\n  }\n`\n\nexport const ControlLink = styled(NavLink)`\n  ${secondaryBtn}\n\n  color: ${({ theme }) => theme.btnSecondaryTextColor};\n\n  background-color: ${({ theme }) => theme.primaryBgColor};\n\n  &:not(:last-child) {\n    margin-right: ${({ theme }) => theme.global.spacing(6)};\n  }\n\n  &:hover,\n  &:focus,\n  &:active,\n  &.active {\n    color: ${({ theme }) => theme.btnHoverTextColor};\n  }\n`\n","export const monthsNamesList = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n]\n","import { FC } from 'react'\nimport sprite from 'assets/icons/sprite.svg'\nimport * as SC from './CalendarControlPanel.styled'\nimport { useIsMobile } from 'hooks'\nimport { global } from 'styles'\nimport { useLocation, useSearchParams } from 'react-router-dom'\nimport { getCurrentDate, getCurrentMonth, getCurrentYear } from 'helpers'\nimport { monthsNamesList } from 'constants'\nimport * as path from 'routsConfig'\nimport { IWeeksResponse } from 'types'\n\ninterface CalendarControlPanelProps {\n  weekData: IWeeksResponse\n}\n\nexport const CalendarControlPanel: FC<CalendarControlPanelProps> = ({\n  weekData,\n}) => {\n  const isMobile = useIsMobile(global.breakpoint.maxMobile)\n  const location = useLocation()\n  const [searchParams, setSearchParams] = useSearchParams()\n  const month = parseInt(\n    searchParams.get('month') || getCurrentMonth().toString()\n  )\n  const year = parseInt(searchParams.get('year') || getCurrentYear().toString())\n  const isMonthsPage = location.pathname === path.months\n  const date = searchParams.get('date') || new Date().toISOString().slice(0, 10)\n\n  // const date = useMemo(() => {\n  //   return searchParams.get('date') || new Date().toISOString().slice(0, 10)\n  // }, [searchParams])\n\n  const handlePrevWeek = () => {\n    const prevDate = new Date(date)\n    prevDate.setDate(prevDate.getDate() - 7)\n    setSearchParams({\n      date: prevDate.toISOString().slice(0, 10),\n    })\n  }\n\n  const handleNextWeek = () => {\n    const nextDate = new Date(date)\n    nextDate.setDate(nextDate.getDate() + 7)\n    setSearchParams({\n      date: nextDate.toISOString().slice(0, 10),\n    })\n  }\n\n  const handlePrevMonth = () => {\n    const prevMonth = month === 1 ? 12 : month - 1\n    const prevYear = month === 1 ? year - 1 : year\n    setSearchParams({\n      month: prevMonth.toString(),\n      year: prevYear.toString(),\n    })\n  }\n\n  const handleNextMonth = () => {\n    const nextMonth = month === 12 ? 1 : month + 1\n    const nextYear = month === 12 ? year + 1 : year\n    setSearchParams({\n      month: nextMonth.toString(),\n      year: nextYear.toString(),\n    })\n  }\n\n  const isPrevWeekActive = new Date(date) < new Date(getCurrentDate())\n  const isNextWeekActive = new Date(date) > new Date(getCurrentDate())\n  const isPrevMonthActive =\n    year < getCurrentYear() ||\n    (year === getCurrentYear() && month < getCurrentMonth())\n  const isNextMonthActive =\n    year > getCurrentYear() ||\n    (year === getCurrentYear() && month > getCurrentMonth())\n\n  return (\n    <SC.CalendarControlPanel>\n      <SC.ControlOutWrapper>\n        <SC.CurrentPeriod>\n          {isMonthsPage\n            ? `${monthsNamesList[month - 1]}-${year}`\n            : `Week-${weekData?.weekPerYear} year-${new Date(\n                date\n              ).getFullYear()}`}\n        </SC.CurrentPeriod>\n\n        {!isMobile && (\n          <SC.ControlWrapper>\n            <SC.ControlLink to={'months'}>Місяць</SC.ControlLink>\n\n            <SC.ControlLink to={'weeks'}>Тиждень</SC.ControlLink>\n          </SC.ControlWrapper>\n        )}\n\n        <SC.ArrowWrapper>\n          <SC.ArrowButton\n            className={`prev ${\n              isMonthsPage && isPrevMonthActive ? 'active' : ''\n            } ${!isMonthsPage && isPrevWeekActive ? 'active' : ''}`}\n            type=\"button\"\n            onClick={isMonthsPage ? handlePrevMonth : handlePrevWeek}\n          >\n            <SC.ArrowIcon className=\"left\">\n              <use href={`${sprite}#arrow`} />\n            </SC.ArrowIcon>\n          </SC.ArrowButton>\n\n          <SC.ArrowButton\n            className={`next ${\n              isMonthsPage && isNextMonthActive ? 'active' : ''\n            } ${!isMonthsPage && isNextWeekActive ? 'active' : ''}`}\n            type=\"button\"\n            onClick={isMonthsPage ? handleNextMonth : handleNextWeek}\n          >\n            <SC.ArrowIcon className=\"right\">\n              <use href={`${sprite}#arrow`} />\n            </SC.ArrowIcon>\n          </SC.ArrowButton>\n        </SC.ArrowWrapper>\n      </SC.ControlOutWrapper>\n\n      {isMobile && (\n        <SC.ControlWrapper>\n          <SC.ControlLink to={'months'}>Місяць</SC.ControlLink>\n\n          <SC.ControlLink to={'weeks'}>Тиждень</SC.ControlLink>\n        </SC.ControlWrapper>\n      )}\n    </SC.CalendarControlPanel>\n  )\n}\n","import { CalendarControlPanel } from 'components/CalendarControlPanel'\r\nimport { FC, Suspense } from 'react'\r\nimport { Outlet, useSearchParams } from 'react-router-dom'\r\nimport { MainLoader } from 'components/common'\r\nimport { useGetWeekInfoQuery } from 'store/weeksApi'\r\nimport { IWeeksResponse } from 'types'\r\n\r\nconst CalendarView: FC = () => {\r\n  const [searchParams] = useSearchParams()\r\n  const date = searchParams.get('date')\r\n  const { data } = useGetWeekInfoQuery({ date })\r\n\r\n  return (\r\n    <>\r\n      <CalendarControlPanel weekData={data as IWeeksResponse} />\r\n\r\n      <Suspense fallback={<MainLoader />}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CalendarView\r\n"],"names":["getCurrentDate","arrowIconCommonStyles","css","theme","CalendarControlPanel","styled","CurrentPeriod","secondaryBtn","ArrowButton","ArrowIcon","ControlWrapper","ArrowWrapper","ControlOutWrapper","global","ControlLink","NavLink","monthsNamesList","weekData","isMobile","useIsMobile","location","useLocation","searchParams","setSearchParams","useSearchParams","month","getCurrentMonth","year","getCurrentYear","isMonthsPage","path.months","date","handlePrevWeek","prevDate","handleNextWeek","nextDate","handlePrevMonth","prevMonth","prevYear","handleNextMonth","nextMonth","nextYear","isPrevWeekActive","isNextWeekActive","isPrevMonthActive","isNextMonthActive","jsxs","SC.CalendarControlPanel","SC.ControlOutWrapper","jsx","SC.CurrentPeriod","SC.ControlWrapper","SC.ControlLink","SC.ArrowWrapper","SC.ArrowButton","SC.ArrowIcon","sprite","CalendarView","data","useGetWeekInfoQuery","Fragment","Suspense","MainLoader","Outlet","CalendarView$1"],"mappings":"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"}