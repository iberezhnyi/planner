{"version":3,"file":"index-C9IgVD2J.js","sources":["../../src/components/WeekList/WeekList.styled.ts","../../src/components/DayPerWeekList/DayPerWeekList.styled.ts","../../src/components/DayPerWeekList/DayPerWeekList.tsx","../../src/components/WeekList/WeekList.tsx"],"sourcesContent":["import styled from 'styled-components'\nimport { global } from 'styles'\n\nexport const WeekList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${({ theme }) => theme.global.spacing(6)};\n`\n\nexport const DayItem = styled.li`\n  /* display: flex;\n  flex-direction: column; */\n\n  width: 100%;\n  padding: ${({ theme }) => theme.global.spacing(4)};\n\n  border: ${({ theme }) => theme.border};\n  border-radius: 0.5rem;\n\n  background-color: ${({ theme }) => theme.primaryBgColor};\n\n  @media (min-width: ${global.breakpoint.desktop}) {\n    width: calc((100% - 1.5rem) / 2);\n  }\n\n  @media (min-width: ${global.breakpoint.largeDesktop}) {\n    width: calc((100% - 3rem) / 3);\n  }\n`\n","import styled from 'styled-components'\nimport { btnCommonStyles } from 'styles'\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`\n\nexport const DayName = styled.p`\n  font-weight: ${({ theme }) => theme.global.text.fontWeight.b};\n`\n\nexport const Date = styled.p`\n  font-weight: ${({ theme }) => theme.global.text.fontWeight.b};\n`\n\nexport const Checkbox = styled.input`\n  margin-right: 10px;\n`\nexport const LabelTaskWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`\n\nexport const LabelTask = styled.label`\n  display: block;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`\n\nexport const TaskTitle = styled.p`\n  display: inline;\n\n  margin-bottom: 5px;\n`\n\nexport const TaskDescription = styled.p`\n  /* display: inline; */\n\n  text-indent: 3ch;\n`\n\nexport const Textarea = styled.textarea`\n  width: 100%;\n  min-height: 150px;\n  border: ${({ theme }) => theme.border};\n  border-radius: 0.5rem;\n  margin-bottom: 20px;\n\n  background-color: ${({ theme }) => theme.inputBgColor};\n\n  resize: none;\n`\n\nexport const Text = styled.div`\n  text-align: justify;\n`\n\nexport const ToggleButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nexport const ToggleButton = styled.button`\n  ${btnCommonStyles}\n\n  color: ${({ theme }) => theme.textColor};\n\n  &:hover,\n  &:focus,\n  &:active,\n  &.open {\n    color: ${({ theme }) => theme.linkActiveColor};\n  }\n`\n\nexport const IconDropdown = styled.svg`\n  width: 1rem;\n  height: 1rem;\n\n  fill: currentColor;\n  stroke: currentColor;\n\n  &.open {\n    transform: rotate(180deg);\n\n    fill: ${({ theme }) => theme.linkActiveColor};\n    stroke: ${({ theme }) => theme.linkActiveColor};\n  }\n`\n","import { FC, useState } from 'react'\nimport { useFormik } from 'formik'\nimport {\n  useAddNoteMutation,\n  useDeleteNoteMutation,\n  useUpdateNoteMutation,\n} from 'store/weeksApi'\nimport { IWeekDay } from 'types'\nimport * as SC from './DayPerWeekList.styled'\nimport sprite from 'assets/icons/sprite.svg'\n\ninterface DayPerWeekListProps extends IWeekDay {}\n\nexport const DayPerWeekList: FC<DayPerWeekListProps> = ({\n  notes,\n  tasks,\n  date,\n  day,\n}) => {\n  const [isTextareaVisible, setTextareaVisible] = useState(false)\n  const toggleTextarea = () => {\n    setTextareaVisible((prev) => !prev)\n  }\n  const [addNote] = useAddNoteMutation()\n  const [updateNote] = useUpdateNoteMutation()\n  const [deleteNote] = useDeleteNoteMutation()\n  const [initialNote, setInitialNote] = useState(notes?.note || '')\n\n  const formik = useFormik({\n    initialValues: {\n      note: initialNote,\n    },\n\n    onSubmit: async (values) => {\n      if (values.note.trim() !== initialNote) {\n        if (notes?._id) {\n          if (values.note.trim() === '') {\n            await deleteNote({\n              noteId: notes._id,\n            })\n\n            setInitialNote('')\n          } else {\n            await updateNote({\n              noteId: notes._id,\n              note: values.note.trim(),\n              date: date.toString(),\n            })\n\n            setInitialNote(values.note.trim())\n          }\n        } else if (values.note.trim() !== '') {\n          await addNote({\n            note: values.note.trim(),\n            date: date.toString(),\n          })\n\n          setInitialNote(values.note.trim())\n        }\n      }\n    },\n  })\n\n  return (\n    <>\n      <SC.Header>\n        <SC.DayName>{day}</SC.DayName>\n        <SC.Date>{new Date(date).toLocaleDateString('uk-UA')}</SC.Date>\n      </SC.Header>\n\n      <SC.LabelTaskWrapper>\n        {tasks &&\n          tasks.map((task) => (\n            <SC.LabelTask key={task._id}>\n              <SC.Checkbox type=\"checkbox\" />\n              <SC.TaskTitle>{task.title}</SC.TaskTitle>\n              <SC.TaskDescription>{task.description}</SC.TaskDescription>\n            </SC.LabelTask>\n          ))}\n      </SC.LabelTaskWrapper>\n\n      <SC.ToggleButtonWrapper>\n        <SC.ToggleButton\n          onClick={toggleTextarea}\n          className={isTextareaVisible ? 'open' : ''}\n        >\n          ----------\n          <SC.IconDropdown className={isTextareaVisible ? 'open' : ''}>\n            <use href={`${sprite}#arrow`} />\n          </SC.IconDropdown>\n          ----------\n        </SC.ToggleButton>\n      </SC.ToggleButtonWrapper>\n      {isTextareaVisible && (\n        <form onBlur={formik.handleSubmit}>\n          <SC.Textarea\n            name=\"note\"\n            onChange={formik.handleChange}\n            value={formik.values.note}\n          />\n        </form>\n      )}\n      <SC.Text>{notes ? notes.note : 'My note'}</SC.Text>\n    </>\n  )\n}\n","import { FC } from 'react'\nimport * as SC from './WeekList.styled'\nimport { DayPerWeekList } from 'components/DayPerWeekList'\nimport { useGetWeekInfoQuery } from 'store/weeksApi'\nimport { useSearchParams } from 'react-router-dom'\nimport { MainLoader } from 'components/common'\n\nconst WeekList: FC = () => {\n  const [searchParams] = useSearchParams()\n  const date = searchParams.get('date')\n  const { data, isFetching } = useGetWeekInfoQuery({ date })\n\n  return (\n    <SC.WeekList>\n      {isFetching && <MainLoader />}\n\n      {data?.weekDays?.map((day) => (\n        <SC.DayItem key={day.id}>\n          <DayPerWeekList {...day} />\n        </SC.DayItem>\n      ))}\n    </SC.WeekList>\n  )\n}\n\nexport default WeekList\n"],"names":["WeekList","styled","theme","DayItem","global","Header","DayName","Date","Checkbox","LabelTaskWrapper","LabelTask","TaskTitle","TaskDescription","Textarea","Text","ToggleButtonWrapper","ToggleButton","btnCommonStyles","IconDropdown","DayPerWeekList","notes","tasks","date","day","isTextareaVisible","setTextareaVisible","useState","toggleTextarea","prev","addNote","useAddNoteMutation","updateNote","useUpdateNoteMutation","deleteNote","useDeleteNoteMutation","initialNote","setInitialNote","formik","useFormik","values","jsxs","Fragment","SC.Header","jsx","SC.DayName","SC.Date","SC.LabelTaskWrapper","task","SC.LabelTask","SC.Checkbox","SC.TaskTitle","SC.TaskDescription","SC.ToggleButtonWrapper","SC.ToggleButton","SC.IconDropdown","sprite","SC.Textarea","SC.Text","searchParams","useSearchParams","data","isFetching","useGetWeekInfoQuery","SC.WeekList","MainLoader","_a","SC.DayItem","WeekList$1"],"mappings":"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"}